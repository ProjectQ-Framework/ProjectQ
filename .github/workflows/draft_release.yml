name: "Draft new release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:
  new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    steps:
    - name: Install git-flow
      run: sudo apt update && sudo apt install -y git-flow

    - uses: actions/checkout@v2

    - name: Configure git-flow
      run: |
        git fetch --tags --depth=1 origin master develop
        git flow init --default --tag v

    - name: Create release branch
      run: git flow release start ${{ github.event.inputs.version }}

    - name: Update changelog
      uses: thomaseizinger/keep-a-changelog-new-release@1.2.1
      with:
        version: ${{ github.event.inputs.version }}

    - name: Initialize mandatory git config
      run: |
        git config user.name "GitHub actions"
        git config user.email noreply@github.com

    - name: Commit changelog and manifest files
      id: make-commit
      run: |
        git add CHANGELOG.md
        git commit --message "Preparing release v${{ github.event.inputs.version }}"

        echo "::set-output name=commit::$(git rev-parse HEAD)"

    - name: Push new branch
      run: git flow release publish ${{ github.event.inputs.version }}

    - name: Create pull request
      uses: thomaseizinger/create-pull-request@1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        head: release/${{ github.event.inputs.version }}
        base: master
        title: Release version ${{ github.event.inputs.version }}
        reviewers: ${{ github.actor }}
        # Write a nice message to the user.
        # We are claiming things here based on the `publish-new-release.yml` workflow.
        # You should obviously adopt it to say the truth depending on your release workflow :)
        body: |
          Hi @${{ github.actor }}!

          This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
          I've updated the changelog and bumped the versions in the manifest files in this commit: ${{ steps.make-commit.outputs.commit }}.

          Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
